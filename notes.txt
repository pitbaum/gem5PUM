python3 `which scons` build/X86/gem5.opt -j16

./build/X86/gem5.opt  src/learning_gem5/test/components.py


To use several ranks, just update the ramulator yaml that loads it and change the number of ranks, this will split up the range over ranks
To add more channels, change the amount of channels in the setup in gem5 since it will add a new Ramulator2 controller obj (Keep ramulator yaml channel count at 1 always)
    -- Make sure that we optimize with threads to access the different channels else, the speed may still be slow even with additional channels
    -- Channels are interleaved with the addresses by 64B so ever 0x40 we switch channels through

Make sure to keep the MMIO size consistent with the sum of (dimm size * ranks * channels)

Base Flags:
    ACPI: ACPI debugging
    Activity:
    AddrRanges:
    Annotate: State machine annotation debugging
    AnnotateQ: State machine annotation queue debugging
    AnnotateVerbose: Dump all state machine annotation details
    BTB:
    BaseXBar:
    Branch:
    Bridge:
    CCRegs:
    CFI:
    CMOS: Accesses to CMOS devices
    Cache:
    CacheComp:
    CachePort:
    CacheRepl:
    CacheTags:
    CacheVerbose:
    Checker:
    Checkpoint:
    ClockDomain:
    CoherentXBar:
    CommMonitor:
    Commit:
    CommitRate:
    Config:
    Context:
    CxxConfig:
    DMA:
    DMACopyEngine:
    DRAM:
    DRAMPower:
    DRAMSim2:
    DRAMState:
    DRAMsim3:
    DVFS:
    DebugPrintf:
    Decode:
    Decoder: Decoder debug output
    DirectedTest:
    DiskImageRead:
    DiskImageWrite:
    DistEthernet:
    DistEthernetCmd:
    DistEthernetPkt:
    Drain:
    DynInst:
    ElasticTrace:
    EnteringEventQueue:
    Ethernet:
    EthernetCksum:
    EthernetDMA:
    EthernetData:
    EthernetDesc:
    EthernetEEPROM:
    EthernetIntr:
    EthernetPIO:
    EthernetSM:
    Event:
    ExecAsid: Format: Include ASID in trace
    ExecCPSeq: Format: Instruction sequence number
    ExecEffAddr: Format: Include effective address
    ExecEnable: Filter: Enable exec tracing (no tracing without this)
    ExecFaulting: Trace faulting instructions
    ExecFetchSeq: Format: Fetch sequence number
    ExecFlags: Format: Include instruction flags in trace
    ExecKernel: Filter: Trace kernel mode instructions
    ExecMacro: Filter: Include macroops
    ExecMicro: Filter: Include microops
    ExecOpClass: Format: Include operand class
    ExecRegDelta:
    ExecResult: Format: Include results from execution
    ExecSymbol: Format: Try to include symbol names
    ExecThread: Format: Include thread ID in trace
    ExecUser: Filter: Trace user mode instructions
    ExternalPort:
    ExternalSignal:
    Faults: Information about faults, exceptions, interrupts, etc
    Fetch:
    FloatRegs:
    Flow:
    FreeList:
    GDBAcc: Remote debugger accesses
    GDBExtra: Dump extra information on reads and writes
    GDBMisc: Breakpoints, traps, watchpoints, etc.
    GDBRead: Reads to the remote address space
    GDBRecv: Messages received from the remote application
    GDBSend: Messages sent to the remote application
    GDBWrite: Writes to the remote address space
    GUPSGen:
    GarnetSyntheticTraffic:
    HMCController:
    HWPrefetch:
    HWPrefetchQueue:
    HelloExample: For Learning gem5 Part 2. Simple example debug flag
    HtmCpu: Hardware Transactional Memory (CPU side)
    HtmMem: Hardware Transactional Memory (Mem side)
    I8042: The I8042 keyboard controller
    I82094AA:
    I8237: The I8237 dma controller
    I8254: Interrupts from the I8254 timer
    I8259: Accesses to the I8259 PIC devices
    IEW:
    IPI:
    IPR:
    IQ:
    IdeCtrl:
    IdeDisk:
    Indirect:
    InstTracker:
    IntPin:
    IntRegs:
    Intel8254Timer:
    Interrupt:
    InvalidReg:
    IsaFake:
    Kvm: Basic KVM Functionality
    KvmContext: KVM/gem5 context synchronization
    KvmIO: KVM MMIO diagnostics
    KvmInt: KVM Interrupt handling
    KvmRun: KvmRun entry/exit diagnostics
    KvmTimer: KVM timing
    LLSC:
    LSQ:
    LSQUnit:
    LTage:
    Loader:
    LocalApic: Local APIC debugging
    LooppointAnalysis:
    MC146818:
    MMU:
    MSHR:
    MatRegs:
    MemChecker:
    MemCheckerMonitor:
    MemCtrl:
    MemDepUnit:
    MemTest:
    MemoryAccess:
    MinorCPU: Minor CPU-level events
    MinorExecute: Minor Execute stage
    MinorInterrupt: Minor interrupt handling
    MinorMem: Minor memory accesses
    MinorScoreboard: Minor Execute register scoreboard
    MinorTiming: Extra timing for instructions
    MinorTrace: MinorTrace cycle-by-cycle state trace
    MiscRegs:
    Mwait:
    NVM:
    NoncoherentXBar:
    O3CPU:
    O3PipeView:
    PCEvent:
    PS2:
    PacketQueue:
    PageTableWalker: Page table walker state machine debugging
    PartitionPolicy:
    PcCountTracker:
    PcSpeaker:
    PciBridge:
    PciDevice:
    PciEndpoint:
    PciHost:
    PortTrace:
    PowerDomain:
    Printf:
    ProbeVerbose:
    ProtocolTrace:
    PseudoInst:
    QOS:
    QemuFwCfg:
    QemuFwCfgVerbose:
    Quiesce:
    RAS:
    ROB:
    Ramulator2:
    Rename:
    ResponsePort:
    RubyCache:
    RubyCacheTrace:
    RubyDma:
    RubyGenerated:
    RubyHitMiss:
    RubyNetwork:
    RubyPort:
    RubyPrefetcher:
    RubyProtocol:
    RubyQueue:
    RubyResourceStalls:
    RubySequencer:
    RubySlicc:
    RubyStats:
    RubySystem:
    RubyTest:
    RubyTester:
    SQL: SQL queries sent to the server
    Scoreboard:
    SerialLink:
    SimpleCPU:
    SimpleCache: For Learning gem5 Part 2.
    SimpleDisk:
    SimpleDiskData:
    SimpleMemobj: For Learning gem5 Part 2.
    SimpleTrace:
    SnoopFilter:
    SpatterGen:
    SpatterKernel:
    Stack:
    StackDist:
    StatEvents: Statistics event tracking
    Stats: Statistics management
    StoreSet:
    SysBridge:
    SyscallBase:
    SyscallVerbose:
    TLB:
    TLBVerbose:
    Tage:
    TageSCL:
    Terminal:
    TerminalVerbose:
    ThermalDomain:
    Thread:
    TimeSync:
    Timer:
    TlmBridge:
    TokenPort:
    TraceCPUData:
    TraceCPUInst:
    TrafficGen:
    Uart:
    VIO: VirtIO base functionality
    VIO9P: General 9p over VirtIO debugging
    VIO9PData: Dump data in VirtIO 9p connections
    VIOBlock: VirtIO block device
    VIOConsole: VirtIO console device
    VIOIface: VirtIO transport
    VIORng: VirtIO entropy source device
    VNC:
    VecPredRegs:
    VecRegs:
    Vma:
    VoltageDomain:
    VtoPhys:
    WorkItems:
    Writeback:
    X86: Generic X86 ISA debugging

Compound Flags:
    AnnotateAll: All Annotation flags
        Annotate, AnnotateQ, AnnotateVerbose
    CacheAll:
        Cache, CacheComp, CachePort, CacheRepl, CacheVerbose, HWPrefetch,
        MSHR, PartitionPolicy
    DiskImageAll:
        DiskImageRead, DiskImageWrite
    EthernetAll:
        Ethernet, EthernetPIO, EthernetDMA, EthernetData, EthernetDesc,
        EthernetIntr, EthernetSM, EthernetCksum, EthernetEEPROM
    EthernetNoData:
        Ethernet, EthernetPIO, EthernetDesc, EthernetIntr, EthernetSM,
        EthernetCksum
    Exec:
        ExecEnable, ExecOpClass, ExecThread, ExecEffAddr, ExecResult,
        ExecSymbol, ExecMicro, ExecMacro, ExecFaulting, ExecUser, ExecKernel
    ExecAll:
        ExecEnable, ExecCPSeq, ExecEffAddr, ExecFaulting, ExecFetchSeq,
        ExecOpClass, ExecRegDelta, ExecResult, ExecSymbol, ExecThread,
        ExecMicro, ExecMacro, ExecUser, ExecKernel, ExecAsid, ExecFlags
    ExecNoTicks:
        Exec, FmtTicksOff
    GDBAll: All Remote debugging flags
        GDBMisc, GDBAcc, GDBRead, GDBWrite, GDBSend, GDBRecv, GDBExtra
    IdeAll:
        IdeCtrl, IdeDisk
    KvmAll: All KVM debug flags
        Kvm, KvmContext, KvmRun, KvmIO, KvmInt, KvmTimer
    Minor:
        MinorCPU, MinorExecute, MinorInterrupt, MinorMem, MinorScoreboard
    O3CPUAll:
        Fetch, Decode, Rename, IEW, Commit, IQ, ROB, FreeList, LSQ, LSQUnit,
        StoreSet, MemDepUnit, DynInst, O3CPU, Activity, Scoreboard,
        Writeback
    Registers:
        IntRegs, FloatRegs, VecRegs, VecPredRegs, MatRegs, CCRegs, MiscRegs
    Ruby:
        RubyQueue, RubyNetwork, RubyTester, RubyGenerated, RubySlicc,
        RubySystem, RubyCache, RubyDma, RubyPort, RubySequencer,
        RubyCacheTrace, RubyPrefetcher, RubyProtocol, RubyHitMiss
    SyscallAll:
        SyscallBase, SyscallVerbose
    XBar:
        BaseXBar, CoherentXBar, NoncoherentXBar, SnoopFilter

Formatting Flags:
    FmtFlag: Show the --debug-flag that enabled each debug message
    FmtStackTrace: Print a stack trace after every debug message
    FmtTicksOff: Don't show tick count on debug messages
